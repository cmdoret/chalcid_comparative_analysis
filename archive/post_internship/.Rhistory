data0 <- read.csv("~/Documents/Internship/Data/R_working_directory/manual/manual_processed_data.csv", header=T)
data0 <- data0[!data0$nbr_country =="0",] #remove species with no countries described
data0 <- data0[!data0$nbr_host_spp =="0",] # remove species with no hosts described
data <- data0[data0$pair != 0,]
data$pair <- as.factor(data$pair)
View(data)
View(data0)
View(data)
rm(list=ls()); library(permute); library(nlme); library(lme4);library(parallel)
data0 <- read.csv("~/Documents/Internship/Data/R_working_directory/manual/manual_processed_data.csv", header=T)
data0 <- data0[!data0$nbr_country =="0",] #remove species with no countries described
data0 <- data0[!data0$nbr_host_spp =="0",] # remove species with no hosts described
data <- data0[data0$pair != 0,]
data$pair <- as.factor(data$pair)
data$max_dist_eq <- pmax(abs(data$lat_min),abs(data$lat_max))
variable = "nbr_host_spp"
fmla <- as.formula(paste(variable,"~ mode + (1|pair)",sep=" "))
m_host <- lmer(fmla, data = data)
z.obs <- coef(summary(m_host))[2, "t value"]
####################################################
# Ramdomize the mode (sex, asex) within a genus
n.genera <- length(levels(data$pair)) #number of genera
l.genus <- as.vector(table(data$pair)) #list w/ number of species per genus
nboot <- 10000 #number of permutations
random_test <- function(x,y) {  #x: data, y:genus
pair_name <- subset(x, pair == y)$pair
species_name <- subset(x, pair == y)$species
var <- subset(x, pair == y)[,variable]
# Sample without replacement
random_mode <- sample(subset(x, pair == y)$mode)
# Return a partial data frame (for each genus)
return(data.frame(pair_name, species_name, var, random_mode))
}
####################################################
# For each genus, run the random_test() function.
zval_model <- function(data, n.genera){
# Complete data frame initialization.
ref.distri <- data.frame(x= character(0), y= character(0), z = character(0))
for (t in 1:n.genera) {
# Sub data frame (for each genus).
part_distri <- random_test(data, levels(data$pair)[t])
# Concatenation of each sub data frames.
ref.distri <- rbind(ref.distri, part_distri)
}
#print(ref.distri)
# Model
m1 <- lmer(var ~ random_mode + (1|pair_name), data = ref.distri)
return(coef(summary(m1))[2, "t value"]) # Return zvalue
}
####################################################
# Main
# Note I leave 1 core free, so that it is still possible to do other things while the script runs
cl <- makeCluster(detectCores()-1)
#get library support needed to run the code
clusterEvalQ(cl,c(library(nlme),library(lme4)))
# Export variables and functions to all nodes in the cluster
clusterExport(cl,c("random_test","zval_model","data","n.genera"))
# Simulations are shared among the nodes and the results are put together in the end.
par(mfrow=c(3,3))
for(v in c("nbr_country","max_dist_eq","lat_mean","lat_median","nbr_host_spp","min_length","max_length")){
variable = v
clusterExport(cl,"variable")
zval.reference <-parSapply(cl, 1:nboot, function(i,...){zval_model(data,n.genera)})
fmla <- as.formula(paste(variable,"~ mode + (1|genus)",sep=" "))
m_host <- lmer(fmla, data = data)
z.obs <- coef(summary(m_host))[2, "t value"]
hist(main=variable,zval.reference, breaks = 100, xlim=c(-40, 40)) # Vector of nboot pvalues.
text(x = 35,y = nboot/50,labels = paste0("P-value = ",sum(z.obs>zval.reference)/nboot))
abline(v=z.obs, col="red", lwd=3)
print(paste0("P-value for ", variable, " is: ", sum(z.obs>zval.reference)/nboot))
}
stopCluster(cl)
rm(list=ls()); library(permute); library(nlme); library(lme4);library(parallel)
data0 <- read.csv("~/Documents/Internship/Data/R_working_directory/manual/manual_processed_data.csv", header=T)
data0 <- data0[!data0$nbr_country =="0",] #remove species with no countries described
data0 <- data0[!data0$nbr_host_spp =="0",] # remove species with no hosts described
data <- data0[data0$pair != 0,]
data$pair <- as.factor(data$pair)
data$max_dist_eq <- pmax(abs(data$lat_min),abs(data$lat_max))
variable = "nbr_host_spp"
fmla <- as.formula(paste(variable,"~ mode + (1|pair)",sep=" "))
m_host <- lmer(fmla, data = data)
z.obs <- coef(summary(m_host))[2, "t value"]
####################################################
# Ramdomize the mode (sex, asex) within a genus
n.genera <- length(levels(data$pair)) #number of genera
l.genus <- as.vector(table(data$pair)) #list w/ number of species per genus
nboot <- 1000 #number of permutations
random_test <- function(x,y) {  #x: data, y:genus
pair_name <- subset(x, pair == y)$pair
species_name <- subset(x, pair == y)$species
var <- subset(x, pair == y)[,variable]
# Sample without replacement
random_mode <- sample(subset(x, pair == y)$mode)
# Return a partial data frame (for each genus)
return(data.frame(pair_name, species_name, var, random_mode))
}
####################################################
# For each genus, run the random_test() function.
zval_model <- function(data, n.genera){
# Complete data frame initialization.
ref.distri <- data.frame(x= character(0), y= character(0), z = character(0))
for (t in 1:n.genera) {
# Sub data frame (for each genus).
part_distri <- random_test(data, levels(data$pair)[t])
# Concatenation of each sub data frames.
ref.distri <- rbind(ref.distri, part_distri)
}
#print(ref.distri)
# Model
m1 <- lmer(var ~ random_mode + (1|pair_name), data = ref.distri)
return(coef(summary(m1))[2, "t value"]) # Return zvalue
}
####################################################
# Main
# Note I leave 1 core free, so that it is still possible to do other things while the script runs
cl <- makeCluster(detectCores()-1)
#get library support needed to run the code
clusterEvalQ(cl,c(library(nlme),library(lme4)))
# Export variables and functions to all nodes in the cluster
clusterExport(cl,c("random_test","zval_model","data","n.genera"))
# Simulations are shared among the nodes and the results are put together in the end.
par(mfrow=c(3,3))
for(v in c("nbr_country","max_dist_eq","lat_mean","lat_median","nbr_host_spp","min_length","max_length")){
variable = v
clusterExport(cl,"variable")
zval.reference <-parSapply(cl, 1:nboot, function(i,...){zval_model(data,n.genera)})
fmla <- as.formula(paste(variable,"~ mode + (1|genus)",sep=" "))
m_host <- lmer(fmla, data = data)
z.obs <- coef(summary(m_host))[2, "t value"]
hist(main=variable,zval.reference, breaks = 100, xlim=c(-40, 40)) # Vector of nboot pvalues.
text(x = 35,y = nboot/50,labels = paste0("P-value = ",sum(z.obs>zval.reference)/nboot))
abline(v=z.obs, col="red", lwd=3)
print(paste0("P-value for ", variable, " is: ", sum(z.obs>zval.reference)/nboot))
}
stopCluster(cl)
#10 sim = 1.9 sec
#stop the cluster
stopCluster(cl)
pvals_a <- data.frame(var=c("nbr_country","max_dist_eq","lat_mean","lat_median","host_spp"),pval=c(0.002,0.009,0.056,0.055,0.001))
library(ggplot2)
setwd("/home/cyril/Documents/Internship/post_internship/")
data0 <- read.csv("~/Documents/Internship/Data/R_working_directory/auto/auto_processed_data.csv", header=T)
citat <-read.csv("~/Dropbox/Cyril-Casper_shared/Internship/Data/auto/auto_citations_per_species.csv", header=T)
data <- merge(x=data0, y=citat, by.x=c("family","genus","species"), by.y=c("family","genus","species"), all=F)
data <- data[!data$nbr_country =="0",] #remove species with no countries described
data <- data[!data$host_spp =="0",] # remove species with no hosts described
data2 <- data[data$ref>"2",] # remove species very few studies
data3 <- data[data$ref>"4",] # remove species very few studies
data4 <- data[data$ref>"7",] # remove species very few studies
effect_size <- read.table("effect_size.txt",sep=",",header=T)
pvals_a <- data.frame(var=c("nbr_country","max_dist_eq","lat_mean","lat_median","host_spp"),pval=c(0.002,0.009,0.056,0.055,0.001))
autoplot <- data.frame(genus=levels(data3$genus))
for(p in 4:15){
count <- 1
gen.vec <- rep(0,length(levels(data3$genus)))
for(g in levels(data3$genus)){
medasex <- median(abs(as.numeric(data3[data3$genus==g & data3$mode=="asex",p])),na.rm=T)
medsex <- median(abs(as.numeric(data3[data3$genus==g & data3$mode=="sex",p])),na.rm=T)
gen.vec[count] <- medasex/medsex
count <- count +1
}
autoplot[,colnames(data3)[p]] <-gen.vec
}
autoplot <- na.omit(autoplot)
rownames(autoplot) <- NULL
form_plot <- data.frame(genus=rep(0,length(autoplot$genus)*12),
var=rep(0,length(autoplot$genus)*12),
val=rep(0,length(autoplot$genus)*12))
var.vec <- colnames(autoplot)[2:13]
for(r in 1:length(autoplot$genus)){
gen.vec <- rep(as.character(autoplot$genus[r]),12)
val.vec <- rep(0,12)
for(v in 2:13){
val.vec[v-1] <- autoplot[r,v]
}
form_plot$genus[((r-1)*12+1):(r*12)] <- gen.vec
form_plot$var[((r-1)*12+1):(r*12)] <- var.vec
form_plot$val[((r-1)*12+1):(r*12)] <- val.vec
}
ggplot(data=form_plot[!(form_plot$var %in% c("lon_max","lon_mean","lon_median","lon_mean","lon_min")),])+
geom_boxplot(aes(y=log10(val),x=factor(var)))+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=var),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var)))+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=var),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)
library(ggplot2)
setwd("/home/cyril/Documents/Internship/post_internship/")
data0 <- read.csv("~/Documents/Internship/Data/R_working_directory/auto/auto_processed_data.csv", header=T)
citat <-read.csv("~/Dropbox/Cyril-Casper_shared/Internship/Data/auto/auto_citations_per_species.csv", header=T)
data <- merge(x=data0, y=citat, by.x=c("family","genus","species"), by.y=c("family","genus","species"), all=F)
data <- data[!data$nbr_country =="0",] #remove species with no countries described
data <- data[!data$host_spp =="0",] # remove species with no hosts described
data$max_dist_eq <- pmax(abs(data$lat_min),abs(data$lat_max))
data2 <- data[data$ref>"2",] # remove species very few studies
data3 <- data[data$ref>"4",] # remove species very few studies
data4 <- data[data$ref>"7",] # remove species very few studies
effect_size <- read.table("effect_size.txt",sep=",",header=T)
#========================
#Generating summary data with ratio per genus and number of species
pvals_a <- data.frame(var=c("nbr_country","max_dist_eq","lat_mean","lat_median","host_spp"),pval=c(0.002,0.009,0.056,0.055,0.001))
autoplot <- data.frame(genus=levels(data3$genus))
for(p in 4:15){
count <- 1
gen.vec <- rep(0,length(levels(data3$genus)))
for(g in levels(data3$genus)){
medasex <- median(abs(as.numeric(data3[data3$genus==g & data3$mode=="asex",p])),na.rm=T)
medsex <- median(abs(as.numeric(data3[data3$genus==g & data3$mode=="sex",p])),na.rm=T)
gen.vec[count] <- medasex/medsex
count <- count +1
}
autoplot[,colnames(data3)[p]] <-gen.vec
}
autoplot <- na.omit(autoplot)
rownames(autoplot) <- NULL
form_plot <- data.frame(genus=rep(0,length(autoplot$genus)*12),
var=rep(0,length(autoplot$genus)*12),
val=rep(0,length(autoplot$genus)*12))
var.vec <- colnames(autoplot)[2:13]
for(r in 1:length(autoplot$genus)){
gen.vec <- rep(as.character(autoplot$genus[r]),12)
val.vec <- rep(0,12)
for(v in 2:13){
val.vec[v-1] <- autoplot[r,v]
}
form_plot$genus[((r-1)*12+1):(r*12)] <- gen.vec
form_plot$var[((r-1)*12+1):(r*12)] <- var.vec
form_plot$val[((r-1)*12+1):(r*12)] <- val.vec
}
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var)))+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=var),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)
View(data)
View(data)
# In this script I try to generate a figure  that sums up the informations about
# the different ecological variables.
# 29.10.2016
##################
# Loading data
library(ggplot2)
setwd("/home/cyril/Documents/Internship/post_internship/")
data0 <- read.csv("~/Documents/Internship/Data/R_working_directory/auto/auto_processed_data.csv", header=T)
citat <-read.csv("~/Dropbox/Cyril-Casper_shared/Internship/Data/auto/auto_citations_per_species.csv", header=T)
data <- merge(x=data0, y=citat, by.x=c("family","genus","species"), by.y=c("family","genus","species"), all=F)
data <- data[!data$nbr_country =="0",] #remove species with no countries described
data <- data[!data$host_spp =="0",] # remove species with no hosts described
data$max_dist_eq <- pmax(abs(data$lat_min),abs(data$lat_max))
data2 <- data[data$ref>"2",] # remove species very few studies
data3 <- data[data$ref>"4",] # remove species very few studies
data4 <- data[data$ref>"7",] # remove species very few studies
effect_size <- read.table("effect_size.txt",sep=",",header=T)
#========================
#Generating summary data with ratio per genus and number of species
pvals_a <- data.frame(var=c("nbr_country","max_dist_eq","lat_mean","lat_median","host_spp"),pval=c(0.002,0.009,0.056,0.055,0.001))
autoplot <- data.frame(genus=levels(data3$genus))
for(p in c(4:15,19)){
count <- 1
gen.vec <- rep(0,length(levels(data3$genus)))
for(g in levels(data3$genus)){
medasex <- median(abs(as.numeric(data3[data3$genus==g & data3$mode=="asex",p])),na.rm=T)
medsex <- median(abs(as.numeric(data3[data3$genus==g & data3$mode=="sex",p])),na.rm=T)
gen.vec[count] <- medasex/medsex
count <- count +1
}
autoplot[,colnames(data3)[p]] <-gen.vec
}
autoplot <- na.omit(autoplot)
rownames(autoplot) <- NULL
View(autoplot)
form_plot <- data.frame(genus=rep(0,length(autoplot$genus)*13),
var=rep(0,length(autoplot$genus)*13),
val=rep(0,length(autoplot$genus)*13))
var.vec <- colnames(autoplot)[2:14]
for(r in 1:length(autoplot$genus)){
gen.vec <- rep(as.character(autoplot$genus[r]),13)
val.vec <- rep(0,13)
for(v in 2:14){
val.vec[v-1] <- autoplot[r,v]
}
form_plot$genus[((r-1)*13+1):(r*13)] <- gen.vec
form_plot$var[((r-1)*13+1):(r*13)] <- var.vec
form_plot$val[((r-1)*13+1):(r*13)] <- val.vec
}
View(form_plot)
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var)))+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=var),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var),notch=T))+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=var),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var)))+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=var),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
theme_dark()
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var)))+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=var),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
theme_get()
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var)))+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=var),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
theme_bw()
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var)))+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=pvals_a),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
theme_bw()
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var)))+
geom_dotplot(aes(y=log10(val),x=factor(var),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
theme_bw()
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var)))+
geom_dotplot(aes(y=log10(val),x=factor(var)),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
theme_bw()
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var)))+
geom_dotplot(aes(y=log10(val),x=factor(var)),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
theme_bw()
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var),fill=pvals_a$pval))+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=pvals_a),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
theme_bw()
View(form_plot)
merge(form_plot, pvals, by=var)
merge(form_plot, pvals_a, by=var)
head(pvals_a)
head(form_plot)
merge(form_plot, pvals_a, by=var, all = F)
merge(form_plot, pvals_a, by="var", all = F,)
form_plot <- merge(form_plot, pvals_a, by="var", all = F,)
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var),fill=pval))+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=pvals_a),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
theme_bw()
merge(form_plot, pvals_a, by="var", all = F)
a <- ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var),fill=pval))+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=var),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
theme_bw()
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var),fill=pval))+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=var),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
theme_bw()
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var),fill=pval))+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=var),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
theme_bw()
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var),fill=pval))+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=var),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
scale_fill_discrete(h = c(1,100))
theme_bw()
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var),fill=as.numeric(pval)))+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=var),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
theme_bw()
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var),fill=as.numeric(pval)))+
scale_fill_continuous(low = "#dddd88", high="#88dd88")+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=var),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
theme_bw()
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var),fill=as.numeric(pval)))+
scale_fill_continuous(low = "#dddd88", high="#88dd88",guide = "colourbar")+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=var),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
theme_bw()
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var),fill=as.factor(pval)))+
scale_fill_continuous(low = "#dddd88", high="#88dd88",guide = "colourbar")+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=var),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
theme_bw()
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var),fill=pval))+
scale_fill_continuous(low = "#dddd88", high="#88dd88",guide = "colourbar")+
geom_dotplot(aes(y=log10(val),x=factor(var)),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
theme_bw()
ggplot(data=form_plot[form_plot$var %in% c("nbr_country","max_dist_eq","lat_median","host_spp"),])+
geom_boxplot(aes(y=log10(val),x=factor(var),fill=pval))+
scale_fill_continuous(high = "#dddd88", low="#88dd88",guide = "colourbar")+
geom_dotplot(aes(y=log10(val),x=factor(var)),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
theme_bw()
pvals_m <- data.frame(var=c("nbr_country","max_dist_eq","lat_mean","lat_median","nbr_host_spp","min_length","max_length"),
pval=c(0.009,0.003,0.041,0.021,0.002,0.409,0.332))
manual <- read.csv("../Data/R_working_directory/manual/manual_processed_data.csv")
autoplot_m <- data.frame(pair=levels(as.factor(manual$pair[manual$pair!=0])))
for(p in c(5:6,14:23)){
count <- 1
gen.vec <- rep(0,length(levels(as.factor(manual$pair[manual$pair!=0]))))
for(g in levels(as.factor(manual$pair[manual$pair!=0]))){
medasex <- median(abs(as.numeric(manual[manual$pair==g & manual$mode=="asex",p])),na.rm=T)
medsex <- median(abs(as.numeric(manual[manual$pair==g & manual$mode=="sex",p])),na.rm=T)
print(paste0("asex : ",medasex));print(medsex)
gen.vec[count] <- medasex/medsex
count <- count +1
}
autoplot_m[,colnames(manual)[p]] <-gen.vec
}
View(autoplot_m)
manual$max_dist_eq <- pmax(abs(manual$lat_min),abs(manual$lat_max))
pvals_m <- data.frame(var=c("nbr_country","max_dist_eq","lat_mean","lat_median","nbr_host_spp","min_length","max_length"),
pval=c(0.009,0.003,0.041,0.021,0.002,0.409,0.332))
manual <- read.csv("../Data/R_working_directory/manual/manual_processed_data.csv")
manual$max_dist_eq <- pmax(abs(manual$lat_min),abs(manual$lat_max))
#Generating summary data with ratio per genus and number of species
autoplot_m <- data.frame(pair=levels(as.factor(manual$pair[manual$pair!=0])))
for(p in c(5:6,14:23)){
count <- 1
gen.vec <- rep(0,length(levels(as.factor(manual$pair[manual$pair!=0]))))
for(g in levels(as.factor(manual$pair[manual$pair!=0]))){
medasex <- median(abs(as.numeric(manual[manual$pair==g & manual$mode=="asex",p])),na.rm=T)
medsex <- median(abs(as.numeric(manual[manual$pair==g & manual$mode=="sex",p])),na.rm=T)
print(paste0("asex : ",medasex));print(medsex)
gen.vec[count] <- medasex/medsex
count <- count +1
}
autoplot_m[,colnames(manual)[p]] <-gen.vec
}
View(manual)
pvals_m <- data.frame(var=c("nbr_country","max_dist_eq","lat_mean","lat_median","nbr_host_spp","min_length","max_length"),
pval=c(0.009,0.003,0.041,0.021,0.002,0.409,0.332))
manual <- read.csv("../Data/R_working_directory/manual/manual_processed_data.csv")
manual$max_dist_eq <- pmax(abs(manual$lat_min),abs(manual$lat_max))
#Generating summary data with ratio per genus and number of species
autoplot_m <- data.frame(pair=levels(as.factor(manual$pair[manual$pair!=0])))
for(p in c(5:6,14:23,42)){
count <- 1
gen.vec <- rep(0,length(levels(as.factor(manual$pair[manual$pair!=0]))))
for(g in levels(as.factor(manual$pair[manual$pair!=0]))){
medasex <- median(abs(as.numeric(manual[manual$pair==g & manual$mode=="asex",p])),na.rm=T)
medsex <- median(abs(as.numeric(manual[manual$pair==g & manual$mode=="sex",p])),na.rm=T)
print(paste0("asex : ",medasex));print(medsex)
gen.vec[count] <- medasex/medsex
count <- count +1
}
autoplot_m[,colnames(manual)[p]] <-gen.vec
}
form_plot_m <- data.frame(pair=rep(0,length(autoplot_m$pair)*13),
var=rep(0,length(autoplot_m$pair)*13),
val=rep(0,length(autoplot_m$pair)*13))
var.vec <- colnames(autoplot_m)[2:13]
for(r in 1:length(autoplot_m$pair)){
gen.vec <- rep(as.character(autoplot_m$pair[r]),13)
val.vec <- rep(0,13)
for(v in 2:14){
val.vec[v-1] <- autoplot_m[r,v]
}
form_plot_m$pair[((r-1)*13+1):(r*13)] <- gen.vec
form_plot_m$var[((r-1)*13+1):(r*13)] <- var.vec
form_plot_m$val[((r-1)*13+1):(r*13)] <- val.vec
}
warnings()
form_plot_m <- data.frame(pair=rep(0,length(autoplot_m$pair)*13),
var=rep(0,length(autoplot_m$pair)*13),
val=rep(0,length(autoplot_m$pair)*13))
var.vec <- colnames(autoplot_m)[2:14]
for(r in 1:length(autoplot_m$pair)){
gen.vec <- rep(as.character(autoplot_m$pair[r]),13)
val.vec <- rep(0,13)
for(v in 2:14){
val.vec[v-1] <- autoplot_m[r,v]
}
form_plot_m$pair[((r-1)*13+1):(r*13)] <- gen.vec
form_plot_m$var[((r-1)*13+1):(r*13)] <- var.vec
form_plot_m$val[((r-1)*13+1):(r*13)] <- val.vec
}
form_plot_m <- merge(form_plot_m, pvals_m, by="var")
ggplot(data=form_plot_m[!(form_plot_m$var %in% c("lon_max","lon_mean","lon_median","lon_mean","lon_min")),])+
geom_boxplot(aes(y=log10(val),x=factor(var)))+
geom_dotplot(aes(y=log10(val),x=factor(var),fill=var),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
scale_fill_continuous(high = "#dddd88", low="#88dd88",guide = "colourbar")+
theme_bw()
ggplot(data=form_plot_m[!(form_plot_m$var %in% c("lon_max","lon_mean","lon_median","lon_mean","lon_min")),])+
geom_boxplot(aes(y=log10(val),x=factor(var), fill=pvals_m$pval))+
geom_dotplot(aes(y=log10(val),x=factor(var)),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
scale_fill_continuous(high = "#dddd88", low="#88dd88",guide = "colourbar")+
theme_bw()
ggplot(data=form_plot_m[!(form_plot_m$var %in% c("lon_max","lon_mean","lon_median","lon_mean","lon_min")),])+
geom_boxplot(aes(y=log10(val),x=factor(var), fill=form_plot_m$pval))+
geom_dotplot(aes(y=log10(val),x=factor(var)),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
scale_fill_continuous(high = "#dddd88", low="#88dd88",guide = "colourbar")+
theme_bw()
ggplot(data=form_plot_m[!(form_plot_m$var %in% c("lon_max","lon_mean","lon_median","lon_mean","lon_min")),])+
geom_boxplot(aes(y=log10(val),x=factor(var), fill=form_plot_m$pval))+
geom_dotplot(aes(y=log10(val),x=factor(var)),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
scale_fill_continuous(high = "#dd8888", low="#88dd88",guide = "colourbar")+
theme_bw()
ggplot(data=form_plot_m[!(form_plot_m$var %in% c("lon_max","lon_mean","lon_median","lon_mean","lon_min")),])+
geom_boxplot(aes(y=log10(val),x=factor(var), fill=log10(form_plot_m$pval)))+
geom_dotplot(aes(y=log10(val),x=factor(var)),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
scale_fill_continuous(high = "#dd8888", low="#88dd88",guide = "colourbar")+
theme_bw()
log10(-0.5)
log10(-2.5)
10^-0.5
10^-2.5
10^-2
10^-1.5
ggplot(data=form_plot_m[!(form_plot_m$var %in% c("lon_max","lon_mean","lon_median","lon_mean","lon_min")),])+
geom_boxplot(aes(y=log10(val),x=factor(var), fill=form_plot_m$pval))+
geom_dotplot(aes(y=log10(val),x=factor(var)),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
scale_fill_continuous(high = "#dd8888", low="#88dd88",guide = "legend")+
theme_bw()
ggplot(data=form_plot_m[!(form_plot_m$var %in% c("lon_max","lon_mean","lon_median","lon_mean","lon_min")),])+
geom_boxplot(aes(y=log10(val),x=factor(var), fill=log2(form_plot_m$pval)))+
geom_dotplot(aes(y=log10(val),x=factor(var)),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
scale_fill_continuous(high = "#dd8888", low="#88dd88",guide = "colourbar")+
theme_bw()
ggplot(data=form_plot_m[!(form_plot_m$var %in% c("lon_max","lon_mean","lon_median","lon_mean","lon_min")),])+
geom_boxplot(aes(y=log10(val),x=factor(var), fill=log10(form_plot_m$pval)))+
geom_dotplot(aes(y=log10(val),x=factor(var)),stackdir="center",binaxis="y",position="dodge",binwidth=0.03)+
scale_fill_continuous(high = "#dd8888", low="#88dd88",guide = "colourbar")+
theme_bw()
